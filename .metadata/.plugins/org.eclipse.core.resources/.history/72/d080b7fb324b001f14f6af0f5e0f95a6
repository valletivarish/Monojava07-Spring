package com.monocept.myapp.exception;

import java.time.LocalDateTime;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;

@ControllerAdvice
public class EmployeeExceptionHandle {
	
	@ExceptionHandler
    public ResponseEntity<EmployeeResponseError> handleGenericException(EmployeeNotFound e) {
        EmployeeResponseError error = new EmployeeResponseError();
        error.setErrorCode(HttpStatus.INTERNAL_SERVER_ERROR.value());
        error.setMessage(e.getMessage());
        error.setTimeStamp(LocalDateTime.now());
        return new ResponseEntity<>(error, HttpStatus.INTERNAL_SERVER_ERROR);
    }

	@ExceptionHandler
    public ResponseEntity<EmployeeResponseError> handleGenericException(Exception e) {
        EmployeeResponseError error = new EmployeeResponseError();
        error.setErrorCode(HttpStatus.INTERNAL_SERVER_ERROR.value());
        error.setMessage(e.getMessage());
        error.setTimeStamp(LocalDateTime.now());
        return new ResponseEntity<>(error, HttpStatus.INTERNAL_SERVER_ERROR);
    }
		
	
}
